buildscript {
  repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.7.RELEASE")
        classpath("org.springframework:springloaded:1.2.4.RELEASE")
    }
}

apply plugin: "java"
apply plugin: "spring-boot"
apply plugin: "eclipse"

// Doma繧ｳ繝ｳ繝代う繝ｫ逕ｨ
processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources

eclipse {
  classpath {
    containers "org.springsource.ide.eclipse.gradle.classpathcontainer"
  }
}

jar {
  baseName = "spring-boot-hello-world"
  version =  "0.0.1-SNAPSHOT"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://repo.spring.io/libs-snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

configurations {
    domaGenRuntime
}

dependencies {
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.springframework.boot:spring-boot-starter-thymeleaf")

  compile("org.springframework.boot:spring-boot-starter-jdbc")
  compile("org.seasar.doma.boot:doma-spring-boot-starter:1.0.2")

  // 繝ｭ繝ｼ繧ｫ繝ｫ縺ｮOracleDriver
  //compile files("C:/ECFS/workspace/Tennessee/WebContent/WEB-INF/lib/ojdbc6-11.2.0.3.jar")
  compile("org.postgresql:postgresql:9.4-1201-jdbc4")

  testCompile("org.springframework.boot:spring-boot-starter-test")

  domaGenRuntime 'org.seasar.doma:doma-gen:2.7.0'
  domaGenRuntime 'org.postgresql:postgresql:9.4-1201-jdbc41'

  // Oracle
  //domaGenRuntime 'com.oracle:ojdbc6:11.2.0.3'
}

// Dao, Entity, Sql縺ｮ閾ｪ蜍慕函謌舌ち繧ｹ繧ｯ
task gen << {
    ant.taskdef(resource: 'domagentask.properties',
        classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: 'jdbc:postgresql://localhost:5432/training', user: 'njsekay', password: 'root') {
        entityConfig(packageName: 'jp.co.entity')
        daoConfig(packageName: 'jp.co.dao')
        sqlConfig()
    }
}